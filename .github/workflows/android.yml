name: Android CI

on:
  push:
    branches: [ "feature_main/android_cd" ]
  pull_request:
    branches: [ "feature_main/android_cd" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
        restore-keys: |
            ${{ runner.os }}-gradle-
        
#    - name: Decrypt secrets.tar.gpg
#      run: gpg --quiet --batch --yes --always-trust --decrypt --passphrase="$SECRET_GPG_PASSWORD" --output secrets.tar secrets.tar.gpg
#      env:
#        SECRET_GPG_PASSWORD: ${{ secrets.SECRET_GPG_PASSWORD }}

#    - name: Unzip secrets.tar
#      run: tar xvf secrets.tar

#    - name: Run ktlint //코틀린 스타일로 검사
#      run: ./gradlew ktlintCheck

#    - name: Run detekt // 성능 개선및 검사 찾아주는 ..
#      run: ./gradlew detekt

# https:///velog.io/@revimal/Kotlin-Ktlint와-Detekt-도입하기
# 추후 꼭 도입 필요
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest

    - name: Build assemble release apk
      run: ./gradlew assembleRelease

    - name: Create android test report
      uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }}

    - name: Build assemble release apk
      run: ./gradlew assembleRelease
